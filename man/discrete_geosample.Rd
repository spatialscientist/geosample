% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/discrete_geosample.R
\name{discrete_geosample}
\alias{discrete_geosample}
\title{A function to geosample a population of spatial locations.}
\usage{
discrete_geosample(population, samplesize, xcolumn, ycolumn,
  minimumdistance, closepairs, circleradius)
}
\arguments{
\item{population}{A data frame containing all potential sampling locations and covariates (if any). If there are no covariates, this will be a matrix of x-y coordinates (in projected coordinate system) for all potential sampling locations.}

\item{samplesize}{The required total sample size n.}

\item{xcolumn}{An integer indicating the column number in the population dataframe for the projected coordinates (X) in metres.}

\item{ycolumn}{An integer indicating the column number in the population dataframe for the projected coordinates (Y) in metres.}

\item{minimumdistance}{Inhibition distance or minimum distance between any two locations in the population sample.}

\item{closepairs}{Number of close pairs locations (must be between 0 and n/2).}

\item{circleradius}{Radius of a circle with centre x being one of the primary (pupulation - closepairs) points within which close pairs are placed.}
}
\value{
The function returns a list of two items consisting of a data frame for sampled locations and their covariates (if any). Otherwise, this will be an n x 2 matrix of X - Y coordinates for sampled locations.
}
\description{
A function to geosample a population of spatial locations.
}
\examples{
##Step 1 Download OpenStreetMap.org buildings data (e.g. Sasa in Nigeria)
##Step 2 Transform the WGS84 coordinate system into a projected coordinate system (e.g. in the case of Sasa using the EPSG:26391 in QGIS software)
##Step 3 Generate the centroids of the buildings and convert file into a comma separated file (a .csv file)
##Step 4 Read the *.csv file
csvdata<-read.csv('H:/uow/CODE/R/csv/SasaWestBeltSystem.csv', header=TRUE, stringsAsFactors=FALSE)
##Step 5 Set the seed number to avoid always generating different sets of random samples everything you execute the function
set.seed(16713)
##Step 6 Set parameters for the function and stored the return value: my.discrete.geosample <- discrete.geosample(population, xcolmun, ycolumn, minimumdistance, closepairs, samplesize, circleradius)
my.discrete.geosample <- discrete_geosample(csvdata, 385,1, 2, 18, 10,  5)
##Step 7 Extract the data frame data into newsample variable
newsample<-data.frame(my.discrete.geosample[1])
##Step 8 Plot original population data
par(pty="s",mfrow=c(1,2))
plot(csvdata[,1],csvdata[,2],pch=19,cex=0.25,xlab="X",ylab="Y",cex.lab=1,cex.axis=1,cex.main=1, main = "geosampled population in blue")
##Step 9 Plot new sampled population data
points(newsample[,1],newsample[,2],pch=19,col="blue")
}
\keyword{geosampling}
